# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Ok < Formula
  desc "Auto devops."
  homepage "https://outblocks.io"
  version "0.1.148"
  license "MIT"

  depends_on "git"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/outblocks/outblocks-cli/releases/download/v0.1.148/outblocks-0.1.148-darwin_amd64.tar.gz"
      sha256 "817623b73289e158eab96e442cd4eeb057f274f666c272dd80904a94f69c411a"

      def install
        bin.install "ok"
        output = Utils.popen_read("#{bin}/ok completion bash")
        (bash_completion/"ok").write output
        output = Utils.popen_read("#{bin}/ok completion zsh")
        (zsh_completion/"_ok").write output
        output = Utils.popen_read("#{bin}/ok completion fish")
        (fish_completion/"ok.fish").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/outblocks/outblocks-cli/releases/download/v0.1.148/outblocks-0.1.148-darwin_arm64.tar.gz"
      sha256 "0c37c02317af061d472bb01c2f13d2e7637af3543ccaed1fb701fb7357dc3058"

      def install
        bin.install "ok"
        output = Utils.popen_read("#{bin}/ok completion bash")
        (bash_completion/"ok").write output
        output = Utils.popen_read("#{bin}/ok completion zsh")
        (zsh_completion/"_ok").write output
        output = Utils.popen_read("#{bin}/ok completion fish")
        (fish_completion/"ok.fish").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/outblocks/outblocks-cli/releases/download/v0.1.148/outblocks-0.1.148-linux_amd64.tar.gz"
        sha256 "cc195a3ea48317d93a7216dc16cc371ccaee01262b5ff6aa2b034006e86629a8"

        def install
          bin.install "ok"
          output = Utils.popen_read("#{bin}/ok completion bash")
          (bash_completion/"ok").write output
          output = Utils.popen_read("#{bin}/ok completion zsh")
          (zsh_completion/"_ok").write output
          output = Utils.popen_read("#{bin}/ok completion fish")
          (fish_completion/"ok.fish").write output
          prefix.install_metafiles
        end
      end
    end
    if Hardware::CPU.arm?
      if !Hardware::CPU.is_64_bit?
        url "https://github.com/outblocks/outblocks-cli/releases/download/v0.1.148/outblocks-0.1.148-linux_armv6.tar.gz"
        sha256 "58bb7ad834d7bf6d920493e8d3959c988ef43db3194495a21731234fdb27eb12"

        def install
          bin.install "ok"
          output = Utils.popen_read("#{bin}/ok completion bash")
          (bash_completion/"ok").write output
          output = Utils.popen_read("#{bin}/ok completion zsh")
          (zsh_completion/"_ok").write output
          output = Utils.popen_read("#{bin}/ok completion fish")
          (fish_completion/"ok.fish").write output
          prefix.install_metafiles
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/outblocks/outblocks-cli/releases/download/v0.1.148/outblocks-0.1.148-linux_arm64.tar.gz"
        sha256 "48e4ee08a8ddd3894c33a632bd25aaea26d6ec0538dd0c327b567bc29c58272d"

        def install
          bin.install "ok"
          output = Utils.popen_read("#{bin}/ok completion bash")
          (bash_completion/"ok").write output
          output = Utils.popen_read("#{bin}/ok completion zsh")
          (zsh_completion/"_ok").write output
          output = Utils.popen_read("#{bin}/ok completion fish")
          (fish_completion/"ok.fish").write output
          prefix.install_metafiles
        end
      end
    end
  end

  test do
    system "#{bin}/ok --version"
  end
end
